

> ‚ö†Ô∏è FRONTEND-ONLY: Do **not** implement any backend APIs or connect real OAuth. Add clear TODO comments where backend endpoints should be called. Keep UI identical to the current NexTrend design ‚Äî only change labels, add features described above, and add frontend placeholders for server work. Ensure all changes are responsive, accessible, and well-commented so the backend team can implement server-side logic later.

---

If you want, I‚Äôll also:

* produce the `BACKEND_INTEGRATION.md` content now, or
* generate the exact `ThemeToggle` + `RunPredictionsOverlay` + `Typewriter` component code snippets tailored for Next.js + Tailwind (client components) so Bolt has code to paste in.

Which of those would you like me to provide now?






# üîß replit AI Task ‚Äî NexTrend Frontend Update (Keep Original UI)

**Branch name:** `feature/darkmode-ui-update-workspace-auth`

**Scope:**
Frontend-only changes. Keep the existing UI styling and layout. Remove/replace specific features, add dark/light mode, update workspace/tools, update login/signup flow (frontend only), and add predictable integration hooks (clear TODO comments) for backend OAuth & AI endpoints.

---

## 1) Global / Theming

* **Add dark/light mode toggle**:

  * Toggle accessible in navbar / settings area (sun/moon icon).
  * Persist user choice to `localStorage` (e.g. `nextrend_theme = 'dark'|'light'`).
  * Use class strategy on `<html>` (`class="dark"`) for CSS/Tailwind dark variants.
  * Add small `ThemeToggle` client component (use `next-themes` or custom).
  * Add a brief comment: `// TODO: Backend may save theme preference per user (optional).`

---

## 2) Navigation / Header

* **Replace** current nav items:

  * **Remove**: `Home, Discover, Optimise, Create, AI Coach, Upgrade`
  * **Add** / show instead: `Pricing, Contact, Support`
  * Final primary nav elsewhere (per your earlier instruction) should be: `Home, Discover, Keywords, AI Trend, Upgrade, Pricing, Contact, Support` ‚Äî ensure this matches the new site nav structure (remove duplicates).
* Keep **visual style** identical; only swap labels / routes.

---

## 3) Homepage / Hero

* Replace ‚ÄúTry generating content ideas‚Äù block with **mockup video** component:

  * Video element / poster image (placeholder file). If no backend, use a local mp4 or an iframe to a placeholder (comment: `// TODO: Replace with production mockup video asset`).
* Replace text `C 580` ‚Üí `EQ Techno` where shown.
* Add **typewriter animation** for the hero tagline lines:

  * Lines to animate:

    1. `Discover trending niches.`
    2. `Create viral content.`
    3. `Grow your audience.`
  * Implement as a small client component (no SSR hydration mismatch) that types lines in sequence and loops or stops (option configurable).
  * Comment: `// Accessible: ensure reduced-motion respects user preference`.

---

## 4) Workspace Updates

* **Remove**: `Create Thumbnails` option completely.
* **Rename**: `Daily Video Ideas` ‚Üí **Trending Videos**.

  * When user clicks **View All** under Trending Videos, it should **redirect** to `/find-trending-videos` or the appropriate ‚ÄúFind Trending Videos‚Äù page.
* **Tools** (workspace tools list):

  * Keep ONLY: `Keywords`, `Subscribers`, `Daily Video`, `Daily Trends`.
  * **Remove** all other tools/options from this workspace UI.
* Ensure UI still follows original styling; only content & CTA changes.

---

## 5) Find Trending Videos / Trending Videos Page

* Ensure `/find-trending-videos` page exists or create it.
* Move **Outlier Score, Views, Publishing Date** into the **Filters** area (not inside each result card). They should be filter controls (range/select/datepicker).
* Results list should remain visually consistent with site design.
* Add `View` / `Details` action that links to a single-video detail route (placeholder).

---

## 6) AI Trends Page Behavior

* **Overlay Hover Button**:

  * Add an overlay hover CTA that floats above the AI Trends panel: **‚ÄúRun Predictions‚Äù**.
  * On hover, show tooltip/text; on click, call a frontend method `runPredictions()` which:

    * Shows loading state and then renders the **AI Predictions UI** (this UI already exists per you ‚Äî show that).
    * Add comment placeholder: `// TODO: Replace below stub with backend POST /ai/predict call`
* UX: ensure button is prominent and non-blocking; accessible with keyboard.

---

## 7) Trending Tools / Tools Page

* In the Tools section (global or workspace-level), **only include**:

  * `Keywords`
  * `Subscribers`
  * `Daily Video`
  * `Daily Trends`
* Remove other tool cards or hide them (cleanly delete the components or add TODO to remove later).

---

## 8) Login & Signup (Frontend)

* **Keep UI look/structure unchanged** ‚Äî enhance functionality only.
* Add **social auth buttons** (frontend-only, no API wiring):

  * `Sign up / Login with Google` (button)
  * `Sign up / Login with YouTube` (button)
  * `Sign up / Login with TikTok` (button)
  * Also keep `Sign up / Login with NexTrend` (email + password).
* Buttons should:

  * Trigger client-side placeholder handlers:

    * `handleOAuth('google')`, `handleOAuth('youtube')`, `handleOAuth('tiktok')`.
    * Each handler should `console.log` the provider and then show a mock success toast/modal.
    * Add clear comments:

      ```js
      // TODO (backend): Implement OAuth flow for provider X.
      // Frontend placeholder: call /api/auth/{provider} once backend ready
      ```
* Add a **Cancel (‚ùå) button** inside login/signup modals (dismisses modal and resets form).
* **Remember me / persistent login**:

  * Use localStorage + a client side token placeholder (e.g. `nextrend_session_token`) to persist session when user logs in.
  * Add comments showing where backend will write a real JWT cookie/session and how frontend should consume it.
* Add validations and accessible form aria attributes.

---

## 9) Security & Comments for Backend

* Important: add `// TODO` comments in code where backend integration will happen, e.g.:

  * `// TODO: POST /api/auth/login -> returns { token, user }`
  * `// TODO: OAuth endpoints: /api/auth/google, /api/auth/tiktok, /api/auth/youtube`
  * `// TODO: AI Predictions endpoint: POST /api/ai/predict { items }`
* Keep code modular: components, hooks (`useAuth`, `useTheme`, `usePredictions`), utils (`api.ts` stub).
* Provide clear README snippet for backend engineer listing required endpoints and payload shapes.

---

## 10) Accessibility & Stability

* Respect `prefers-reduced-motion` for typewriter animation.
* Ensure all interactive elements are keyboard accessible and have `aria-*` labels where needed.
* Add basic error boundaries/loading states for predictions, search, video lists.

---

## 11) Files / Components to Edit (suggested)

> Adjust paths to match your project structure. Bolt should search for these names and update them.

* `app/layout.tsx` ‚Äî add `ThemeProvider` or theme class logic.
* `components/Navbar.tsx` ‚Äî replace nav items, add ThemeToggle.
* `components/ThemeToggle.tsx` ‚Äî new component.
* `components/Hero.tsx` or `components/hero-section.tsx` ‚Äî mockup video + typewriter effect.
* `app/(workspace)/page.tsx` or `app/workspace/page.tsx` ‚Äî update Tools list & Workspace layout.
* `app/find-trending-videos/page.tsx` ‚Äî create/update page to show results with filters.
* `components/RunPredictionsOverlay.tsx` ‚Äî overlay button for AI Trends.
* `components/LoginModal.tsx` / `app/auth/login/page.tsx` ‚Äî add social buttons + cancel.
* `app/auth/signup/page.tsx` ‚Äî same updates for signup.
* `components/TrendingFilters.tsx` ‚Äî build Filters (Outlier Score, Views, Date).
* `lib/useAuth.ts` or `contexts/AuthContext.tsx` ‚Äî add localStorage session persistence (frontend).
* `utils/api.ts` ‚Äî add placeholders and TODOs.

---

## 12) UX smalls & edge cases

* When `View All` clicked under Trending Videos ‚Üí `router.push('/find-trending-videos')`.
* If user clicks `Run Predictions` and there is no backend, show message: *‚ÄúPredictions will run once backend is connected. (Mock results shown.)‚Äù* and display the mock UI.
* If user signs up via OAuth buttons (frontend-only), show modal: *‚ÄúOAuth flow to be implemented server-side ‚Äî mock success.‚Äù*

---

## 13) Commit / PR suggestions

* Make atomic commits with messages:

  * `feat(theme): add dark/light mode toggle`
  * `feat(workspace): replace Daily Video Ideas with Trending Videos`
  * `chore(nav): update navigation items (Pricing, Contact, Support)`
  * `feat(auth): add social auth buttons + persistent session (frontend)`
  * `refactor: add TODOs and api stubs for backend integration`
* Open PR titled: `feature/darkmode-ui-update-workspace-auth` with description linking to this spec.

---

## 14) Deliverables for Backend Dev (include in repo)

Add a short `BACKEND_INTEGRATION.md` with:

* Required endpoints and expected payloads (auth, predictions, trending data).
* Notes about security (JWT usage, CORS, rate limiting).
* Where in the code to plug endpoints (files and TODO markers).

---